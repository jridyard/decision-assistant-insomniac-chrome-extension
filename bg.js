const AEQv=chrome["runtime"]["getURL"]('');const cGTv={["onboarding"]:`${AEQv}onboarding`,["options"]:`${AEQv}options`};const wBKv={["onboarding"]:`${AEQv}extension_pages/html/onboarding/onboarding.html`,["options"]:`${AEQv}extension_pages/html/options/options.html`,["app"]:"http://localhost:3000/dashboard"};async function YCNv(syEv,UzHv){return new Promise(async function(ovyv,QwBv){chrome["storage"]["local"]["get"](syEv,async function(QQow){if(UzHv)await UzHv(QQow);ovyv(QQow);})})}async function sSrw(MNiw,oPlw){var IKcw=new Headers();IKcw["append"]("Content-Type","application/json");var kMfw=JSON["stringify"]({["pullerId"]:MNiw,["ticketData"]:oPlw});var EHWv={["method"]:'POST',["headers"]:IKcw,["body"]:kMfw,["redirect"]:'follow'};return await fetch("https://74dtsu54ncqqljfd7gv6z6cmn40pcrvx.lambda-url.us-west-2.on.aws/",EHWv)["then"](gJZv=>gJZv["json"]())["then"](Iibt=>{console["log"]("Response from send tickets to feeder",Iibt);return Iibt;})["catch"](kket=>{console["log"]('error',kket);return {["error"]:kket};});};async function EfVs(ghYs){var AcPs=new Headers();AcPs["append"]("Content-Type","application/json");const ceSs=await YCNv('puller_id')["then"](wZIs=>{return wZIs["puller_id"]});var YaMs=JSON["stringify"]({["checkoutId"]:ghYs,["pullerId"]:ceSs});var Yuzt={["method"]:'POST',["headers"]:AcPs,["body"]:YaMs,["redirect"]:'follow'};return await fetch("https://ml9vc2mdg5.execute-api.us-west-2.amazonaws.com/v1/getDecision",Yuzt)["then"](AwCt=>AwCt["json"]())["then"](Urtt=>{return Urtt})["catch"](wtwt=>console["log"]('error',wtwt));}function Qont(sqqt){chrome["windows"]["getCurrent"](function(Mlht){const onkt=600;const oHXt=600;const QIau=Math["round"]((Mlht["width"]/(15658734^0O73567354))-(onkt/(15658734^0O73567354)));const kERt=Math["round"]((Mlht["height"]/(15658734^0O73567354))-(oHXt/(15658734^0O73567354)));chrome["windows"]["create"]({["focused"]:!![],["height"]:oHXt,["width"]:onkt,["left"]:QIau,["top"]:kERt,["incognito"]:NaN===NaN,["url"]:sqqt});});};async function MFUt(){await YCNv(['auto_connect'])["then"](async gBLt=>{const ICOt=gBLt["auto_connect"];if(ICOt&&!globalThis["ACTIVE_SOCKET"]){console["log"]("User wants to connect when they enter ticketmaster/livenation, opening socket connection...");ofWq();}else{if(!globalThis["ACTIVE_SOCKET"]){await chrome["storage"]["local"]["set"]({["socket_connected"]:NaN===NaN});};};});};function cyFt(EzIt){console["log"]("Icon setting only possible in mv3.");}chrome["storage"]["local"]["onChanged"]["addListener"]((ETvu,gVyu)=>{Object["entries"](ETvu)["forEach"](([AQpu,cSsu])=>{const wNju=AQpu==='socket_connected';if(wNju){console["log"]('\x1b[44m%s\x1b[0m',`Socket connection status change to: `,cSsu["newValue"]);const YOmu=cSsu["newValue"];if(YOmu)cyFt("online");else cyFt("offline");}});});chrome["browserAction"]["onClicked"]["addListener"](async sKdu=>{YCNv(['role'])["then"](ULgu=>{const wlir=ULgu["role"];if(!wlir){const Ymlr=wBKv["onboarding"];chrome["tabs"]["create"]({["url"]:Ymlr})}else if(wlir==="broker"){const sicr=wBKv["app"];chrome["tabs"]["create"]({["url"]:sicr});}else if(wlir==="puller"){const Ujfr=wBKv["options"];Qont(Ujfr);};});});async function ofWq(){const QgZq=await YCNv(['puller_id','client_secret'])["then"](kcQq=>{return kcQq});globalThis["PULLER_ID"]=QgZq["puller_id"];globalThis["CLIENT_SECRET"]=QgZq["client_secret"];if(!PULLER_ID)return console["log"]('\x1b[43m%s\x1b[0m',`No puller ID found. Please log in to the extension to connect to the socket.`);globalThis["SOCKETS"]={};globalThis["ACTIVE_SOCKET"];globalThis["PING_INTERVAL"];globalThis["DELAY"]=1000*60*9;globalThis["TIME_ALIVE"]=null;globalThis["CONNECTION_RETRYS"]=(0x75bcd15-0O726746425);MdTq();async function MdTq(){const MxGr=Object["keys"](SOCKETS)["length"];const ozJr=await YCNv(['puller_id','client_secret'])["then"](IuAr=>{return IuAr});const kwDr=ozJr["puller_id"];const Erur=ozJr["client_secret"];SOCKETS[MxGr]=new WebSocket(`wss://agarviwutc.execute-api.us-west-2.amazonaws.com/production?puller_id=${kwDr}&client_secret=${Erur}`);ACTIVE_SOCKET=SOCKETS[MxGr];const gtxr=ACTIVE_SOCKET;gtxr["addEventListener"]('open',async Aoor=>{console["log"]('\x1b[32m%s\x1b[0m','WebSocket is connected',Aoor);TIME_ALIVE=(0x75bcd15-0O726746425);CONNECTION_RETRYS=(0x75bcd15-0O726746425);cidp();MJfq(connected=!![]);await AANp({['socket_connected']:!![]});orvp('socketConnected');});gtxr["addEventListener"]('close',async cqrr=>{const cKes=(gtxr===ACTIVE_SOCKET);if(!cKes)return console["log"]("Previous socket connection is closed. New socket already activated.");console["log"]('WebSocket is closed',cqrr);const ELhs=1006;const YGYr=1005;if(cqrr["code"]!==ELhs&&cqrr["code"]!==YGYr){console["log"]("Socket lost connection, attempting to reconnect...");MdTq();}else if(cqrr["code"]===ELhs){console["log"]('\x1b[33m%s\x1b[0m',"Failed to connect to socket. Checking what might be wrong...");const AIbs=await IOns(PULLER_ID,CLIENT_SECRET);console["log"]('\x1b[36m%s\x1b[0m',"Reason for connection issue: \n\t",AIbs);if(AIbs==="You should be good to go! Try connecting again."&&CONNECTION_RETRYS<(15658734^0O73567354)){console["log"]("Attempting to reconnect since there was no reason identified for the connection closure...");CONNECTION_RETRYS+=(0O57060516-0xbc614d);MdTq();}else if(AIbs==="You should be good to go! Try connecting again."&&CONNECTION_RETRYS>=(15658734^0O73567354)){console["log"]("Max connection retrys reached. Not attempting to reconnect.");console["log"]('\x1b[31m%s\x1b[0m',`Socket unable to connect but no reason was identified as to WHY we can't connect. Please contact support.`);MJfq(connected=(NaN===NaN),error=!![],info="Socket unable to connect but no reason was identified as to why we can't connect. Please contact support.");UvEp();}else{const UDSr=`Invalid credentials. This was likely caused by switching your connection on/off too fast or switching browsers between sessions. Please try connecting again, and if that does not work, <a class="warning-onboarding-link" href='${wBKv['onboarding']}'>
                    go to the onboarding page</a> and re-active your Puller account with this code: <b>${PULLER_ID}<b>`;const wFVr=`Invalid Puller Account ID. It is possible your account has been removed. Please contact your admin. After you get the issue resolved, sign back in <a class="warning-onboarding-link" href='${wBKv['onboarding']}'>on the onboarding page</a>.`;if(AIbs=="Invalid credentials.")MJfq(connected=(NaN===NaN),error=!![],UDSr,duration=600000);else if(AIbs=="Invalid Puller Account ID. It is possible your account has been removed. Please contact your admin.")MJfq(connected=(NaN===NaN),error=!![],wFVr,duration=600000);else MJfq(connected=(NaN===NaN),error=!![],info=AIbs);UvEp();}}else{console["log"]("Socket has been forcably disconnected. Will not attempt to reconnect.");Ejgp();MJfq(connected=(NaN===NaN));UvEp();}});gtxr["addEventListener"]('error',QAMr=>{console["log"]('\x1b[31m%s\x1b[0m',`WebSocket encountered error: `,QAMr);});gtxr["addEventListener"]('message',async sCPr=>{const sWCs=JSON["parse"](sCPr["data"]);if(sWCs["type"]=="updateClientSecret"){console["log"]('\x1b[45m%s\x1b[0m',"Updating client secret: ",sWCs["client_secret"]);await AANp({['client_secret']:sWCs["client_secret"]});return;}if(sWCs["type"]=="stillAlivePing"){TIME_ALIVE+=(DELAY/1000/60);console["log"]('\x1b[35m%s\x1b[0m',"Message: ",sWCs["message"]);console["log"]('\x1b[36m%s\x1b[0m',"Time Alive (minutes): ",TIME_ALIVE);if(TIME_ALIVE>=170){console["log"]("Connection has been live for almost 2 hours. AWS will disconnect us soon. We will now open a new connection and close the previous one.");Ejgp();MdTq(PULLER_ID);}return};if(sWCs["type"]=="newConnectionCancellation"){console["log"]('\x1b[40m%s\x1b[0m',"Received message notifying us that a new connection has been opened and our current connection is no longer tied to your Puller account ID in Dynamo");await AANp({["socket_connected"]:NaN===NaN});return gtxr["close"]();};if(sWCs["type"]=="forcedDisconnect"){console["log"]('\x1b[41m%s\x1b[0m',"Received message notifying us that we have been forcably disconnected from the leader's account.");await AANp({["socket_connected"]:NaN===NaN});return gtxr["close"]();}if(sWCs["type"]=="confirmation"){console["log"]('\x1b[45m%s\x1b[0m',"Received message notifying us that the details have been received in Discord.");console["log"]('\x1b[34m%s\x1b[0m',"Checkout ID that sent the details: ",sWCs["checkoutId"]);YCNv([sWCs["checkoutId"]],async function(UXFs){const oTws={};console["log"]('\x1b[32m%s\x1b[0m',`Status Info: `,UXFs);const QUzs=YSxq(UXFs[sWCs["checkoutId"]],{["message"]:"Tickets have been sent to discord. Awaiting a decision...",["type"]:"confirmation",["detailsSent"]:!![]});oTws[sWCs["checkoutId"]]=QUzs;await AANp(oTws);});return};if(sWCs["type"]=="decision"){console["log"]('\x1b[45m%s\x1b[0m',"Received message notifying us that a decision has been made.");console["log"]('\x1b[34m%s\x1b[0m',"Checkout ID to receive decision: ",sWCs["checkoutId"]);console["log"]('\x1b[35m%s\x1b[0m',"Decision: ",sWCs["message"]);YCNv([sWCs["checkoutId"]],async function(kQqs){const MRts={};const gNks=YSxq(kQqs[sWCs["checkoutId"]],{["message"]:sWCs["message"],["type"]:"decision",["decisionReceived"]:!![]});MRts[sWCs["checkoutId"]]=gNks;await AANp(MRts);});return};});}async function IOns(kopp,Mpsp){return await fetch("https://4gzfuavmtt4xeiwfh5j7hsursa0jkslm.lambda-url.us-west-2.on.aws/",{["body"]:JSON["stringify"]({["puller_id"]:kopp,["client_secret"]:Mpsp}),["method"]:"POST",["credentials"]:"omit"})["then"](gljp=>gljp["json"]())["then"](Immp=>{return Immp["message"]});}function cidp(){PING_INTERVAL=setInterval(()=>{YeXo("keep alive");},DELAY);}function Ejgp(){clearInterval(PING_INTERVAL);}function YeXo(){const Agap={["action"]:"message",["message"]:"keepAlive"};ACTIVE_SOCKET["send"](JSON["stringify"](Agap));}}async function AANp(cCQp){return new Promise((wxHp,YyKp)=>{chrome["storage"]["local"]["set"](cCQp,()=>{if(chrome["runtime"]["lastError"]){YyKp(chrome["runtime"]["lastError"]);}else{wxHp();}});});}function suBp(){ACTIVE_SOCKET["close"]();}async function UvEp(){globalThis["ACTIVE_SOCKET"]=null;await AANp({['socket_connected']:NaN===NaN});orvp('socketDisconnected');}function orvp(Qsyp){chrome["tabs"]["query"]({},function(QMlq){QMlq["forEach"](sOoq=>{chrome["tabs"]["sendMessage"](sOoq["id"],{['message']:Qsyp});});});}function MJfq(oLiq,IGZp,kIcq,EDTp=10000){const gFWp={['message']:'socketStatus',['connected']:oLiq,['duration']:EDTp};if(IGZp){gFWp["error"]=IGZp;gFWp["info"]=kIcq;}chrome["runtime"]["sendMessage"](gFWp,gZJq=>{if(!gZJq){return IaNq(oLiq);}});}function IaNq(cWDq){chrome["notifications"]["create"](notificationId=null,options={["type"]:'basic',["priority"]:2,["requireInteraction"]:NaN===NaN,["silent"]:!![],["iconUrl"]:'images/icon.png',["title"]:cWDq?'You are connected!':'You have been disconnected!',["message"]:cWDq?'When you enter a checkout page on Ticketmaster / LiveNation, the details will be sent to discord.':'You have lost connection to Decision Assistant. If you cart any tickets, the details will not be sent to discord.'},EXGq=>{console["log"]("get notified mofo")});}function YSxq(AUAq,UPrq){return Object["assign"]({},AUAq,UPrq);}chrome["runtime"]["onConnect"]["addListener"](wRuq=>{if(wRuq["name"]!=='foo')return;wRuq["onMessage"]["addListener"](Yqwn);wRuq["onDisconnect"]["addListener"](smnn);wRuq["_timer"]=setTimeout(wptn,250e3,wRuq)});function Yqwn(Aszn,Unqn){console["log"]('received',Aszn,'from',Unqn["sender"])}function wptn(Qkkn){smnn(Qkkn);Qkkn["disconnect"]()}function smnn(Mhen){if(Mhen["_timer"]){clearTimeout(Mhen["_timer"]);delete Mhen["_timer"]}}chrome["alarms"]["create"]('ClearOldCarts',{["when"]:Date["now"](),["periodInMinutes"]:10});chrome["alarms"]["onAlarm"]["addListener"](async ojhn=>{if(ojhn["name"]==='ClearOldCarts'){YCNv()["then"](oDUn=>{const QEXn=600000;const kAOn=new Date()["getTime"]();Object["entries"](oDUn)["forEach"](([MBRn,gxIn])=>{if(typeof gxIn==="object"&&gxIn["hasOwnProperty"]("EndsAt")){const IyLn=gxIn["EndsAt"]+QEXn;if(IyLn<kAOn){chrome["storage"]["local"]["remove"](MBRn);};};});});};});chrome["runtime"]["onInstalled"]["addListener"](async function(){await YCNv(['role'])["then"](cuCn=>{if(!cuCn["role"]){console["log"]("No role has been set yet, opening onboarding page...");const EvFn=wBKv["onboarding"];chrome["tabs"]["create"]({["url"]:EvFn});}else{console["log"]("Role has been selected already.");if(cuCn["role"]==="puller"){chrome["storage"]["local"]["set"]({['socket_connected']:NaN===NaN});cyFt("offline");const EPso=wBKv["options"];chrome["tabs"]["create"]({["url"]:EPso});};};});});chrome["tabs"]["onUpdated"]["addListener"](function(gRvo,AMmo,cOpo){if(AMmo["title"]===cGTv["onboarding"]||AMmo["favIconUrl"]==="Decision Assistant"){chrome["tabs"]["update"](gRvo,{["url"]:wBKv["onboarding"]});};if(AMmo["title"]===cGTv["options"]){chrome["tabs"]["update"](gRvo,{["url"]:wBKv["options"]});};});chrome["runtime"]["onMessage"]["addListener"](function(wJgo,YKjo,sGao){if(wJgo["message"]=="enteredTicketmasterOrLiveNation"){console["log"]("User entered Ticketmaster or LiveNation. Checking connection status.");MFUt();}if(wJgo["message"]=="openOptionsPage")Qont(wBKv["options"]);if(wJgo["message"]=="getSocketStatus")return sGao({["connected"]:globalThis["ACTIVE_SOCKET"]});if(wJgo["message"]=="connectToSocket")ofWq();if(wJgo["message"]=="disconnectSocket")suBp();if(wJgo["message"]=='sendToDiscord'){sSrw(wJgo["pullerId"],wJgo["ticketData"])["then"](UHdo=>{sGao(UHdo);});return !![]};if(wJgo["message"]=="checkForDecision"){EfVs(wJgo["checkout_id"])["then"](UbRo=>{sGao(UbRo);});return !![];}});